#include <iostream>
#include <fstream>
#include <string>

void isValidUser(); 

int main()
{
    std::string admin_pwd;
    std::string encrypted;
    std::string unencrypted;
    std::string username;
    std::string text;
    char key[5] = "somewhere";

    std::ofstream of1("Credentials.txt", std::ios::app);
    if (!of1.is_open())
    {
        std::cout << "Failed to open file for writing.\n";
        return 1;
    }

    std::cout << "\nEnter the Username: ";
    std::cin >> username;
    std::cout << "\nEnter the password: ";
    std::cin >> admin_pwd;

    
    of1 << username << ", " << admin_pwd << std::endl;
    of1.close();

    
    std::ifstream if1("Credentials.txt");
    if (!if1.is_open())
    {
        std::cout << "Failed to open file for reading.\n";
        return 1;
    }

    while (getline(if1, text))
    {
        for (int x = 0; x < text.size(); x++)
        {
            
            encrypted += text[x] ^ key[x % 4];
        }
    }
    if1.close();

    std::cout << "Encrypted: " << encrypted << std::endl;


    for (int x = 0; x < encrypted.size(); x++)
    {
        unencrypted += encrypted[x] ^ key[x % 4];
    }

    std::cout << "Unencrypted: " << unencrypted << std::endl;

    isValidUser(); 

    system("pause");
    return 0;
}

void isValidUser()
{
    std::ifstream file("Credentials.txt");
    if (!file.is_open())
    {
        std::cout << "Failed to open the file.\n";
        return;
    }

    std::string wordToFind;
    std::cout << "\nEnter the word to find: ";
    std::cin >> wordToFind;

    bool found = false;
    std::string line;
    while (getline(file, line))
    {
        if (line.find(wordToFind) != std::string::npos)
        {
            found = true;
            break;
        }
    }

    if (found)
    {
        std::cout << "The word \"" << wordToFind << "\" is present in the file.\n";
    }
    else
    {
        std::cout << "The word \"" << wordToFind << "\" is not present in the file.\n";
    }

    file.close();
}
